#!/bin/bash

# set -o xtrace
# set -o errexit
# set -o posix
set -o nounset
# set -o pipefail

HNAME=$(hostname)
echo "Status: Hostname $HNAME"

XPATH=$(realpath "$0")
echo "Status: Path $XPATH"

DPATH=$(dirname "$XPATH")
echo "Status: Dir $DPATH"

onroot () {
  if [ "$(echo "$1" | cut -c -6)" = "/home/" ]; then
    return 10
  else
    return 11
  fi
}

dosudo () {
  onroot "$2"

  if [ $? = 11 ]; then
    $SHELL -c "sudo $1 $2"
  else
    $SHELL -c "$1 $2"
  fi
}

cmerge () {
  if [[ -n "${3:+x}" ]]; then
    echo "Error: cmerge() requires 2 parameters, got 3: $1, $2, $3"
    exit 1
  fi

  SRC="$1"                              # source
  HSRC="$SRC.$HNAME"                    # host-specific source
  DST="$2"                              # destination

  if [ -f "$SRC" ]; then
    # common
    # echo "Status: Found $PSRC -> $DST"
    SRC="$SRC"
  elif [ -f "$HSRC" ]; then
    # host-specific
    # echo "Status: Found $PHSRC -> $DST"
    SRC="$HSRC"
  else
    echo "Might-Skip:"
    echo "  $DPATH/$SRC does not exist"
    echo "  $DPATH/$HSRC does not exist"

    if [ -f "$DST" ]; then
      echo "Not-Skip: $DST -> {$HSRC}"
      cp -i "$DST" "$DPATH/$HSRC"
    else
      echo "Skip: File $DST does not exist either"
    fi

    return
  fi

  if [ -e "$DST" ]; then
    if [ -f "$DST" ]; then
      if diff "$DPATH/$SRC" "$DST" 1>/dev/null 2>&1 ; then
        echo "Skip: {$SRC} === $DST"
      else
        echo "Merge: {$SRC} != $DST"
        dosudo "vim -f -d $DPATH/$SRC" "$DST"
      fi
    else
      echo "Error: $DST exists but is not a file"
      exit 1
    fi
  else
    DSTDIRNAME=$(dirname "$DST")
    echo "Create: $DSTDIRNAME"
    dosudo "mkdir -p" "$DSTDIRNAME"
    echo "Copy: {$SRC} -> $DST"
    dosudo "cp -i $DPATH/$SRC" "$DST"
  fi
}

XFCONF=~/.config/xfce4/xfconf/xfce-perchannel-xml

cmerge xfce4/displays.xml            $XFCONF/displays.xml
cmerge xfce4/keyboard-layout.xml     $XFCONF/keyboard-layout.xml
cmerge xfce4/keyboards.xml           $XFCONF/keyboards.xml
cmerge xfce4/pointers.xml            $XFCONF/pointers.xml
cmerge xfce4/appfinder.xml           $XFCONF/xfce4-appfinder.xml
cmerge xfce4/desktop.xml             $XFCONF/xfce4-desktop.xml
cmerge xfce4/keyboard-shortcuts.xml  $XFCONF/xfce4-keyboard-shortcuts.xml
cmerge xfce4/notifyd.xml             $XFCONF/xfce4-notifyd.xml
cmerge xfce4/panel.xml               $XFCONF/xfce4-panel.xml
cmerge xfce4/power-manager.xml       $XFCONF/xfce4-power-manager.xml
cmerge xfce4/session.xml             $XFCONF/xfce4-session.xml
cmerge xfce4/settings-editor.xml     $XFCONF/xfce4-settings-editor.xml
cmerge xfce4/settings-manager.xml    $XFCONF/xfce4-settings-manager.xml
cmerge xfce4/xfwm4.xml               $XFCONF/xfwm4.xml
cmerge xfce4/xsettings.xml           $XFCONF/xsettings.xml

cmerge xfce4/terminalrrc             ~/.config/xfce4/terminal/terminalrc
cmerge xfce4/help.rc                 ~/.config/xfce4/help.rc
cmerge xfce4/helpers.rc              ~/.config/xfce4/helpers.rc
cmerge xfce4/screenshooter           ~/.config/xfce4/xfce4-screenshooter

cmerge autostart/redshift.desktop    ~/.config/autostart/redshift.desktop
cmerge autostart/xrgb.desktop        ~/.config/autostart/xrgb.desktop
cmerge autostart/xnocaps.desktop     ~/.config/autostart/xnocaps.desktop

cmerge applications/Zoom.desktop     ~/.local/share/applications/Zoom.desktop

# cmerge gtk/gtkrc-2.0                 ~/.gtkrc-2.0
# cmerge gtk/filechooser.ini           ~/.config/gtk-2.0/gtkfilechooser.ini
# cmerge gtk/settings.ini              ~/.config/gtk-3.0/settings.ini
cmerge gtk/bookmarks                 ~/.config/gtk-3.0/bookmarks

cmerge emacs/init.el                 ~/.config/emacs/init
cmerge emacs/early-init.el           ~/.config/emacs/early-init.el

cmerge bash/rc                       ~/.bashrc
cmerge bash/rc_graalvm               ~/.bashrc_graalvm
cmerge bash/rc_extras                ~/.bashrc_extras
cmerge bash/profile                  ~/.bash_profile

cmerge fonts.conf                    ~/.config/fontconfig/fonts.conf
cmerge htoprc                        ~/.config/htop/htoprc
cmerge redshift.conf                 ~/.config/redshift.conf
cmerge youtube-dl.conf               ~/.config/youtube-dl/config
cmerge gitconfig                     ~/.config/git/config
cmerge hunspell_en_US                ~/.hunspell_en_US
cmerge profile                       ~/.profile
cmerge vimrc                         ~/.vimrc

cmerge tabnine/config.toml           ~/.config/TabNine/TabNine.toml
cmerge tabnine/config.json           ~/.config/TabNine/tabnine_config.json

cmerge x11/dmrc                      ~/.dmrc
cmerge x11/lxdm.conf                 /etc/lxdm/lxdm.conf

cmerge loader/loader.conf            /boot/loader/loader.conf
cmerge loader/arch.conf              /boot/loader/entries/arch.conf

cmerge systemd/coredump.conf         /etc/systemd/coredump.conf
cmerge systemd/system.conf           /etc/systemd/system.conf
cmerge systemd/journald.conf         /etc/systemd/journald.conf
cmerge systemd/resolved.conf         /etc/systemd/resolved.conf
cmerge systemd/boot-override.conf    /etc/systemd/system/boot.mount.d/override.conf
cmerge systemd/fstrim@.service       /etc/systemd/system/fstrim@.service
cmerge systemd/fstrim@.timer         /etc/systemd/system/fstrim@.timer

cmerge pulse/default.pa              /etc/pulse/default.pa

cmerge archlinux/makepkg.conf        /etc/makepkg.conf
cmerge archlinux/mkinitcpio.conf     /etc/mkinitcpio.conf
cmerge archlinux/pacman.conf         /etc/pacman.conf

cmerge hostname                      /etc/hostname
cmerge hosts                         /etc/hosts
cmerge locale.conf                   /etc/locale.conf
cmerge vconsole.conf                 /etc/vconsole.conf
cmerge sysctl.conf                   /etc/sysctl.d/sysctl.conf
cmerge limits.conf                   /etc/security/limits.conf

cmerge modules/modprobe.conf         /etc/modprobe.d/modprobe.conf
cmerge modules/nvidia.conf           /etc/modprobe.d/nvidia.conf
cmerge modules/amdgpu.conf           /etc/modprobe.d/amdgpu.conf

cmerge udev/99-mount.rules           /etc/udev/rules.d/99-mount.rules

pkgs_cargo_tmp_file=$(mktemp)
cargo install --list | grep -E ':$' | awk '{ print $1 }' > "$pkgs_cargo_tmp_file"
cmerge "pkgs-cargo.list" "$pkgs_cargo_tmp_file"
pkgs_cargo_install=$(comm --check-order -2 -3 "pkgs-cargo.list" "$pkgs_cargo_tmp_file" | tr '\n' ' ')
pkgs_cargo_remove=$(comm --check-order -1 -3 "pkgs-cargo.list" "$pkgs_cargo_tmp_file" | tr '\n' ' ')
rm "$pkgs_cargo_tmp_file"

if [ "$pkgs_cargo_remove" != "" ]; then
  echo "Remove Cargo packages:"
  $SHELL -c "cargo uninstall $pkgs_cargo_remove"
fi

if [ "$pkgs_cargo_install" != "" ]; then
  echo "Install Cargo packages:"
  $SHELL -c "cargo install $pkgs_cargo_install"
fi

if [ -f /etc/os-release ]; then
  if grep -i "archlinux" /etc/os-release 1>/dev/null 2>&1 ; then
    pkgs_tmp_file=$(mktemp)
    pacman -Qtteq | sort > "$pkgs_tmp_file"
    cmerge "pkgs.list" "$pkgs_tmp_file"
    pkgs_install=$(comm --check-order -2 -3 "pkgs.list.$HNAME" "$pkgs_tmp_file" | tr '\n' ' ')
    pkgs_remove=$(comm --check-order -1 -3 "pkgs.list.$HNAME" "$pkgs_tmp_file" | tr '\n' ' ')
    rm "$pkgs_tmp_file"

    if [ "$pkgs_remove" != "" ]; then
      echo "Remove packages:"
      $SHELL -c "sudo pacman -Rcsn $pkgs_remove"
    fi

    install_happened=0

    if [ "$pkgs_install" != "" ]; then
      echo "Install packages:"
      $SHELL -c "sudo pacman -Sy --needed $pkgs_install"
      install_happened=1
    fi

    echo "Update System"
    if [ $install_happened == 0 ]; then
      yay -Syu
    else
      yay -Su
    fi

    pkgs_custom=$(find build -maxdepth 1 -type d | tail -n +2 | tr '\n' ' ')
    for pkg in $pkgs_custom; do
        pkg_name=$(basename "$pkg")
        avail_ver=$(yay -Si "$pkg_name" | grep Version | awk '{ print $3 }')
        build_ver=$(grep pkgver= "$pkg/PKGBUILD")
        build_rel=$(grep pkgrel= "$pkg/PKGBUILD")
        build_ver=${build_ver:7}-${build_rel:7}

        if [ "$avail_ver" != "$build_ver" ]; then
            echo "Needs update: $pkg_name: $build_ver -> $avail_ver"
        fi
    done
  fi
fi
