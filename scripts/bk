#!/bin/bash

set -o pipefail
set -o errexit
set -o nounset
set -o noglob

CMD=("rsync"
     "-hhh"
     "--verbose"
     "--info=progress1,flist0,del1,copy1,backup1,misc0,name1,nonreg1,remove1,skip1,stats0,symsafe1"
     "--archive"
     "--executability"
     "--delete"
     "--delete-excluded"
     '--exclude=*/cargo-target'
     '--exclude=*/rustup'
     '--exclude=*/target'
     '--exclude=*/__pycache__'
     '--exclude=emacs/elpa/***'
     '--exclude=node_modules/***'
     '--exclude=clangd/*'
     '--exclude=share/flatpak/***'
     '--exclude=share/rust/***'
     '--exclude=__pycache__'
     '--exclude=.mypy_cache'
     '--exclude=emacs/elpa/'
     '--exclude=emacs/eln-cache/'
     '--exclude=ccache/'
     '--exclude=paru/'
     '--exclude=pip/'
     '--exclude=thumbnails/'
     '--exclude=dconf/'
     '--exclude=epiphany/'
     '--exclude=llvm-debuginfod/'
     '--exclude=media-art/'
     '--exclude=mesa_shader_cache_db/'
     '--exclude=mesa_shader_cache/'
     '--exclude=tracker3/'
     '--exclude=flatpak-cargo/'
     '--exclude=electron/'
     '--exclude=share/nautilus/'
     '--exclude=share/gnome-shell/'
     '--exclude=index-v2/'
     '--exclude=gvfs-metadata/'
     '--exclude=vulkan-pipeline-cache/'
     '--exclude=mozilla/'
     '--exclude=pip-tools/'
     '--exclude=tealdeer/'
     '--exclude=torbrowser/'
     '--exclude=node_modules/'
     '--exclude=.cache/clangd'
     '--exclude=.libs'
     '--exclude=dovecot/'
     "$@")

echo ">>> Rsync command:" "${CMD[@]}"

cmd () {
  printf ">>> %s --> %s\n" "$1" "$2"
  "${CMD[@]}" "$1" "$2"
}

HOSTNAME=$(hostnamectl hostname)
printf ">>> Hostname = %s\n\n" "$HOSTNAME"

HOME='/home/fred'
DATA='/run/media/fred/Data'
MEDIA='/run/media/fred/Media'
PORTABLE='/run/media/fred/Portable'
OX='/run/media/fred/OX'

backup_home() {
  cmd "$HOME/Archive/"                  "$1/Archive/"
  cmd "$HOME/Documents/"                "$1/Documents/"
  cmd "$HOME/Downloads/"                "$1/Downloads/"
  cmd "$HOME/Phone/"                    "$1/Phone/"
  cmd "$HOME/Pictures/"                 "$1/Pictures/"
  cmd "$HOME/Public/"                   "$1/Public/"
  cmd "$HOME/Videos/"                   "$1/Videos/"
  cmd "$HOME/Workspace/"                "$1/Workspace/"

  cmd "$HOME/.ssh/"                     "$1/Configs/ssh/"
  cmd "$HOME/.config/beets/"            "$1/Configs/config-beets/"
  cmd "$HOME/.config/MusicBrainz/"      "$1/Configs/config-MusicBrainz/"
  cmd "$HOME/.config/yt-dlp/"           "$1/Configs/config-yt-dlp/"
  cmd "$HOME/.config/syncthing/"        "$1/Configs/config-syncthing/"
  cmd "$HOME/.local/share/gnupg/"       "$1/Configs/local-share-gnupg/"
  cmd "$HOME/.local/share/keyrings/"    "$1/Configs/local-share-keyrings/"

  cmd "$HOME/.config/"                  "$1/Configs/dot.config/"
  cmd "$HOME/.cache/"                   "$1/Configs/dot.cache/"
  cmd "$HOME/.local/"                   "$1/Configs/dot.local/"
}

if [ "$HOSTNAME" == "axon" ]; then
  if [ -d "$DATA" ]; then
    backup_home "$DATA/Fred"
  else
    printf ">>> %s is not mounted\n" "$DATA"
  fi

  if [ -d "$MEDIA" ]; then
    backup_home "$MEDIA/Fred"

    if [ -d "$DATA" ]; then
      cmd "$DATA/FredOther/" "$MEDIA/FredOther/"
    fi
  else
    printf ">>> %s is not mounted\n" "$MEDIA"
  fi

  if [ -d "$PORTABLE" ]; then
    backup_home "$PORTABLE/Fred"

    if [ -d "$DATA" ]; then
      cmd "$DATA/FredOther/" "$PORTABLE/FredOther/"
    fi
  else
    printf ">>> %s is not mounted\n" "$PORTABLE"
  fi
elif [ "$HOSTNAME" == "neuron" ]; then
  if [ -d "$PORTABLE" ]; then
    backup_home "$PORTABLE/Laptop"
  else
    printf ">>> %s is not mounted\n" "$PORTABLE"
  fi

  if [ -d "$OX" ]; then
    backup_home "$OX/Laptop"
  else
    printf ">>> %s is not mounted\n" "$OX"
  fi
else
  printf ">>> Unknown machine with hostname = %s\n" "$HOSTNAME"
  exit 1
fi
