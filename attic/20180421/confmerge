#!/bin/sh

set -o posix
# set -o errexit
set -o nounset
set -o pipefail
# set -o xtrace

HNAME=$(hostname)
echo "Status: Hostname $HNAME"

XPATH=$(realpath "$0")
echo "Status: Path $XPATH"

DPATH=$(dirname "$XPATH")
echo "Status: Dir $DPATH"

onroot () {
  if [ "$(echo "$1" | cut -c -6)" = "/home/" ]; then
    return 10
  else
    return 11
  fi
}

dosudo () {
  onroot "$2"

  if [ $? = 11 ]; then
    $SHELL -c "sudo $1 $2"
  else
    $SHELL -c "$1 $2"
  fi
}

cmerge () {
  SRC="$1"                              # source
  HSRC="$SRC.$HNAME"                    # host-specific source
  DST="$2"                              # destination

  if [ -f "$SRC" ]; then
    # common
    # echo "Status: Found $PSRC -> $DST"
    SRC="$SRC"
  elif [ -f "$HSRC" ]; then
    # host-specific
    # echo "Status: Found $PHSRC -> $DST"
    SRC="$HSRC"
  else
    echo "Might-Skip:"
    echo "  $DPATH/$SRC does not exist"
    echo "  $DPATH/$HSRC does not exist"

    if [ -f "$DST" ]; then
      echo "Not-Skip: $DST -> {$HSRC}"
      cp -i "$DST" "$DPATH/$HSRC"
    else
      echo "Skip: File $DST does not exist either"
    fi

    return
  fi

  if [ -e "$DST" ]; then
    if [ -f "$DST" ]; then
      if diff "$DPATH/$SRC" "$DST" 1>/dev/null 2>&1 ; then
	echo "Skip: {$SRC} === $DST"
      else
	echo "Merge: {$SRC} != $DST"
	dosudo "vim -f -d $DPATH/$SRC" "$DST"
      fi
    else
      echo "Error: $DST exists but is not a file"
      exit 1
    fi
  else
    DSTDIRNAME=$(dirname "$DST")
    echo "Create: $DSTDIRNAME"
    dosudo "mkdir -p" "$DSTDIRNAME"
    echo "Copy: {$SRC} -> $DST"
    dosudo "cp -i $DPATH/$SRC" "$DST"
  fi
}

cmerge emacs/emacs.el ~/.emacs

cmerge loader/loader.conf /boot/loader/loader.conf
cmerge loader/entries/arch.conf /boot/loader/entries/arch.conf

cmerge xfce4/whiskermenu-1.rc ~/.config/xfce4/panel/whiskermenu-1.rc
cmerge xfce4/terminalrc ~/.config/xfce4/terminal/terminalrc

for i in keyboards.xml pointers.xml \
         xfce4-desktop.xml xfce4-keyboard-shortcuts.xml \
         xfce4-notifyd.xml xfce4-panel.xml \
         xfce4-session.xml xfwm4.xml xsettings.xml ; do
  cmerge xfce4/$i ~/.config/xfce4/xfconf/xfce-perchannel-xml/$i
done

cmerge xfce4/renamerrc ~/.config/Thunar/renamerrc
cmerge pcmanfm.conf ~/.config/pcmanfm/default/pcmanfm.conf
cmerge pcmanfm.desktop ~/.config/autostart/pcmanfm.desktop

cmerge bashrc ~/.bashrc
cmerge cpupower.conf /etc/default/cpupower
cmerge env-profile.sh /etc/profile.d/env.sh
cmerge fonts.conf ~/.config/fontconfig/fonts.conf
cmerge freetype2.sh /etc/profile.d/freetype2.sh
cmerge fstab /etc/fstab
cmerge gdbinit ~/.gdbinit
cmerge gitconfig ~/.gitconfig
cmerge gitconfig-https ~/.gitconfig-https
cmerge gtk2/gtkfilechooser.ini ~/.config/gtk-2.0/gtkfilechooser.ini
cmerge gtk2/gtkrc-2.0 ~/.gtkrc-2.0
cmerge gtk3/bookmarks ~/.config/gtk-3.0/bookmarks
cmerge gtk3/settings.ini ~/.config/gtk-3.0/settings.ini
cmerge gtk3/gtk.css ~/.config/gtk-3.0/gtk.css
cmerge hostname /etc/hostname
cmerge hosts /etc/hosts
cmerge htoprc ~/.config/htop/htoprc
cmerge hunspell_en_US ~/.hunspell_en_US
cmerge lxdm.conf /etc/lxdm/lxdm.conf
cmerge locale.conf /etc/locale.conf
cmerge locale.nopurge /etc/locale.nopurge
cmerge makepkg.conf /etc/makepkg.conf
cmerge mdadm.conf /etc/mdadm.conf
cmerge mimeapps.list ~/.config/mimeapps.list
cmerge mkinitcpio.conf /etc/mkinitcpio.conf
cmerge modules.conf /etc/modprobe.d/modules.conf
cmerge pacman-mirrorlist /etc/pacman.d/mirrorlist
cmerge pacman.conf /etc/pacman.conf
# cmerge pulseaudio-daemon.conf ~/.config/pulse/daemon.conf
cmerge systemd/getmail.service ~/.config/systemd/user/getmail.service
cmerge redshift-systemd-override.conf ~/.config/systemd/user/redshift.service.d/override.conf
cmerge redshift.conf ~/.config/redshift.conf
cmerge sysctl.conf /etc/sysctl.d/sysctl.conf
cmerge systemd/hdparm.service /etc/systemd/system/hdparm.service
cmerge systemd/wired.network /etc/systemd/network/wired.network
cmerge systemd/resolved.conf /etc/systemd/resolved.conf
cmerge systemd/coredump.conf /etc/systemd/coredump.conf
cmerge systemd/disable-thp.service /etc/systemd/system/disable-thp.service
cmerge systemd/pacman-optimize.service /etc/systemd/system/pacman-optimize.service
cmerge systemd/localepurge.service /etc/systemd/system/localepurge.service
cmerge resolvconf.conf /etc/resolvconf.conf
cmerge resolv.conf /etc/resolv.conf
cmerge 60-ioscheds.rules /etc/udev/rules.d/60-ioscheds.rules
cmerge vconsole.conf /etc/vconsole.conf
cmerge vimrc ~/.vimrc
cmerge vokoscreen.conf ~/.config/vokoscreen/vokoscreen.conf
cmerge yaourtrc /etc/yaourtrc

cmerge NVidiaSettings.desktop ~/.config/autostart/NVidiaSettings.desktop
cmerge nvidia-settings-rc ~/.nvidia-settings-rc
cmerge xorg-nvidia.conf /etc/X11/xorg.conf.d/20-nvidia.conf
# cmerge NVDock.desktop ~/.config/autostart/NVDock.desktop
# cmerge Steam.desktop ~/.config/autostart/Steam.desktop
# cmerge 99-steam-controller.rules /etc/udev/rules.d/99-steam-controller.rules

cmerge NoX11Capslock.desktop ~/.config/autostart/NoX11Capslock.desktop
cmerge NoX11DPMS.desktop ~/.config/autostart/NoX11DPMS.desktop
cmerge Compton.desktop ~/.config/autostart/Compton.desktop

cmerge X11Resources.desktop ~/.config/autostart/X11Resources.desktop
cmerge Xresources ~/.Xresources

cmerge LockScreen.desktop ~/.config/autostart/LockScreen.desktop
# cmerge Firefox.desktop ~/.local/share/applications/Firefox.desktop
# cmerge Thunderbird.desktop ~/.local/share/applications/Thunderbird.desktop

rsync -r fonts/ ~/.fonts/

if [ -f /etc/os-release ]; then
  if grep -i "archlinux" /etc/os-release 1>/dev/null 2>&1 ; then
    # sudo pacman-optimize

    pkgs_tmp_file=$(mktemp)
    pacman -Qtte | awk '{ print $1 }' > "$pkgs_tmp_file"
    cmerge pkgs.list "$pkgs_tmp_file"

    pkgs_install=""

    while read -r pkg ; do
      if ! grep "$pkg" "$pkgs_tmp_file" 1>/dev/null 2>&1 ; then
        echo "Install: $pkg"
        pkgs_install="$pkg $pkgs_install"
      fi
    done < "pkgs.list"

    pkgs_remove=""

    while read -r pkg ; do
      if ! grep "$pkg" "pkgs.list" 1>/dev/null 2>&1 ; then
        echo "Remove: $pkg"
        pkgs_remove="$pkg $pkgs_remove"
      fi
    done < "$pkgs_tmp_file"

    rm "$pkgs_tmp_file"

    if [ "$pkgs_remove" != "" ]; then
      echo "Remove Packages:"
      $SHELL -c "sudo pacman -Rcsn $pkgs_remove"
    fi

    echo "Update System"
    $SHELL -c "yaourt -Syua"

    if [ "$pkgs_install" != "" ]; then
      echo "Install Packages:"
      $SHELL -c "yaourt -S --needed $pkgs_install"
    fi
  fi
fi
